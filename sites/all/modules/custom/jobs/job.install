<?php

function job_schema()
{
  $schema['division'] = array(
    'description' => t('The table for division information.'),
    'fields' => array(
      'nid' => array(
        'description' => t('The primary identifier for a node.'),
        'type' => 'serial',
        'unsigned' => true,
        'not null' => true
      ),
      'vid' => array(
        'description' => t('The current {node_revisions}.vid version identifier.'),
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0
      ),
      'description' => array(
        'description' => t('Description of division.'),
        'type' => 'text',
        'not null' => true,
        'size' => 'big'
      ),
      'description_format' => array(
        'description' => t('Format of Description of division.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => true,
        'default' => ''
      ),
      'phone' => array(
        'description' => t('Phone Number of division.'),
        'type' => 'varchar',
        'length' => 32,
        'not null' => true,
        'default' => ''
      ),
      'email' => array(
        'description' => t('Email of division.'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => true,
        'default' => ''
      ),
      'website' => array(
        'description' => t('Website URL of division.'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => true,
        'default' => ''
      ),
      'person' => array(
        'description' => t('Contact Person.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => true,
        'default' => ''
      )
    ),
    'indexes' => array(
      'phone' => array(
        'phone'
      )
    ),
    'unique keys' => array(
      'nid_vid' => array(
        'nid',
        'vid'
      ),
      'vid' => array(
        'vid'
      )
    ),
    'primary key' => array(
      'nid'
    )
  );
  $schema['job']      = array(
    'description' => t('The table for job posts.'),
    'fields' => array(
      //node id for each job
      'nid' => array(
        'description' => t('The primary identifier for a node.'),
        'type' => 'serial',
        'unsigned' => true,
        'not null' => true
      ),
      //revision id
      'vid' => array(
        'description' => t('The current {node_revisions}.vid version identifier.'),
        'type' => 'int',
        'unsigned' => true,
        'not null' => true,
        'default' => 0
      ),
      'division' => array(
        //id based what division posted the job
        'description' => t('division ID.'),
        'type' => 'int',
        'unsigned' => true
      ),
      //job requirements
      'requirement' => array(
        'description' => t('Job Requirement.'),
        'type' => 'text',
        'not null' => true,
        'size' => 'big'
      ),
      'requirement_format' => array(
        'description' => t('Format of Description of division.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => true,
        'default' => ''
      ),
      //Job description
      'description' => array(
        'description' => t('Job Description.'),
        'type' => 'text',
        'not null' => true,
        'size' => 'big'
      ),
      'description_format' => array(
        'description' => t('Format of Description of division.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => true,
        'default' => ''
      ),
      'location' => array(
        'description' => t('Job Location'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => true,
        'default' => ''
      ),
      'application' => array(
        'description' => t('Job Application.'),
        'type' => 'text',
        'not null' => true,
        'size' => 'big'
      ),
      'application_format' => array(
        'description' => t('Format of Description of division.'),
        'type' => 'varchar',
        'length' => 255,
        'not null' => true,
        'default' => ''
      )
    ),
    'indexes' => array(
      'division' => array(
        'division'
      )
    ),
    'unique keys' => array(
      'nid_vid' => array(
        'nid',
        'vid'
      ),
      'vid' => array(
        'vid'
      )
    ),
    'primary key' => array(
      'nid'
    )
  );
  return $schema;
}

function job_install()
{
  variable_set("comment_division", 1);
  variable_set("comment_job", 1);
  variable_set("node_options_division", array(
    "status"
  ));
  variable_set("node_options_job", array(
    "status"
  ));
}

function job_enable()
{
  field_associate_fields('taxonomy');

  // Create the division vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_divisioncategory', 0));
  if (!$vocabulary) {
    $edit       = array(
      'name' => t('division Category'),
      'machine_name' => 'division_category',
      'description' => t('Category of Division'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_divisioncategory', $vocabulary->vid);
    $field = array(
      'field_name' => 'field_divisioncategory',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          )
        )
      )
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'field_divisioncategory',
      'entity_type' => 'node',
      'label' => 'Division Category',
      'bundle' => 'division',
      'required' => false,
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline'
        ),
        'teaser' => array(
          'type' => 'hidden'
        )
      )
    );
    field_create_instance($instance);
  }

  // Create the location vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_divisionlocation', 0));
  if (!$vocabulary) {
    $edit       = array(
      'name' => t('Division Location'),
      'machine_name' => 'division_location',
      'description' => t('Location of division'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_divisionlocation', $vocabulary->vid);
    $field = array(
      'field_name' => 'field_divisionlocation',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          )
        )
      )
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'field_divisionlocation',
      'entity_type' => 'node',
      'label' => 'Division Location',
      'bundle' => 'division',
      'required' => false,
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline'
        ),
        'teaser' => array(
          'type' => 'hidden'
        )
      )
    );
    field_create_instance($instance);
  }

  // Create the job type vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_jobtype', 0));
  if (!$vocabulary) {
    $edit       = array(
      'name' => t('Job Type'),
      'machine_name' => 'job_type',
      'description' => t('Type of job'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_jobtype', $vocabulary->vid);
    $field = array(
      'field_name' => 'field_jobtype',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          )
        )
      )
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'field_jobtype',
      'entity_type' => 'node',
      'label' => 'Job Type',
      'bundle' => 'job',
      'required' => false,
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline'
        ),
        'teaser' => array(
          'type' => 'hidden'
        )
      )
    );
    field_create_instance($instance);
    // Add Permanent, Part Time, Contract to this vocabulary.
    $type = array(
      'Permanent',
      'Part Time',
      'Contract'
    );
    foreach ($type as $name) {
      $edit = array(
        'name' => t($name),
        'description' => '',
        'parent' => array(
          0
        ),
        'vid' => $vocabulary->vid
      );
      $term = (object) $edit;
      taxonomy_term_save($term);
    }
  }

  // Create the job category vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_jobcategory', 0));
  if (!$vocabulary) {
    $edit       = array(
      'name' => t('Job Category'),
      'machine_name' => 'job_category',
      'description' => t('Category of job'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_jobcategory', $vocabulary->vid);
    $field = array(
      'field_name' => 'field_jobcategory',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          )
        )
      )
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'field_jobcategory',
      'entity_type' => 'node',
      'label' => 'Job Category',
      'bundle' => 'job',
      'required' => true,
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'default' => array(
          'label' => 'inline'
        ),
        'teaser' => array(
          'type' => 'hidden'
        )
      )
    );
    field_create_instance($instance);
    // Add suggested job category to this vocabulary.
    $category = array(
      'Accounting',
      'Admin & Clerical',
      'Banking & Finance',
      'Business Development',
      'Customer Service',
      'Education',
      'Engineering',
      'Human Resources',
      'Information Technology',
      'Insurance',
      'Legal',
      'Logistics',
      'Manufacturing',
      'Marketing & Public Relations',
      'Media',
      'Medical & Pharmaceutical',
      'Translation',
      'Transportation & Shipping',
      'Other'
    );
    foreach ($category as $name) {
      $edit = array(
        'name' => t($name),
        'description' => '',
        'parent' => array(
          0
        ),
        'vid' => $vocabulary->vid
      );
      $term = (object) $edit;
      taxonomy_term_save($term);
    }
  }

  node_types_rebuild();
  $types = node_type_get_types();
}
